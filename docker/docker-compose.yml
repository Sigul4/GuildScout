version: '3.3'

networks:
  dataplay-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - dataplay-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - dataplay-network

  app:
    build:
      context: ..
      dockerfile: docker/app.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../app/src:/usr/src/app/src
    env_file:
      - .docker.env
    depends_on:
      - kafka
      - postgres
    command: sh -c "npx prisma migrate dev --name init && npm run start:dev"
    networks:
      - dataplay-network


  discord-bot:
    build:
      context: ../
      dockerfile: docker/bot.Dockerfile
    container_name: discord-bot
    env_file:
      - .docker.env
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - dataplay-network

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - ../app/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d discord_bot"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dataplay-network

  prisma-studio:
    build:
      context: ../
      dockerfile: docker/app.Dockerfile
    ports:
      - "5555:5555"
    env_file:
      - .docker.env
    volumes:
      - ../app:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma db push &&
        npx prisma studio --port 5555 --hostname 0.0.0.0
      "
    networks:
      - dataplay-network

volumes:
  postgres_data:

